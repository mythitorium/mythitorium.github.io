@import url('https://fonts.googleapis.com/css2?family=Oswald:wght@200&family=Poppins&family=Roboto+Condensed&display=swap');

:root {
    --wrapper-max-width: 800px;
    --site-grid-gap: 35px;

    --nav-row-size: 65px;

    overflow-y: scroll;

    --navSelected: 1;

    --banner-size-x: 238px;
    --banner-size-y: 76px;
}

/* 
#
# Generic 
#
*/

a { color: var(--alt-hover-color); }
a:focus { color: var(--alt-hover-color); }
a:hover { color: var(--hover-color); }
a:active { color: var(--selected-color); }

body {
    background-color: var(--background-color); 
    margin: 0;
}

img {
    width: 100%;
    height: auto;
}

p {
    font-size: 18px;
    font-family: 'Poppins';
    margin: 0;
}

button {
    border: none;
    transition: 0.2s;
    background-color: transparent;
}

/* 
#
# Wrapper
#
*/

.wrapper {
    max-width: var(--wrapper-max-width);
    height: 100vh;

    margin: 0 auto;

    display: grid;
    grid-template-rows: 250px 1fr 50px;
}

.wrapper > div:first-child {
    display: grid;
    grid-template-columns: calc(var(--banner-size-x) * 2);
    grid-template-rows: calc(var(--banner-size-y) * 2);
}

.wrapper > div:first-child > img { image-rendering: pixelated; }

/* Main content of the site */
.wrapper > div:nth-child(2) {
    display: grid;
    grid-template-columns: 2fr 3fr;
    gap: var(--site-grid-gap);
}

.wrapper > div:last-child > p {
    color: var(--half-font-color);
    font-size: 16px;
}

/* 
#
# Navigation panel
#
*/

.navPanel {
    display: grid;
    grid-auto-rows: var(--nav-row-size);
    gap: 15px;
}

.navPanel > button > p {
    font-family: 'Oswald';
    font-weight: 200;  
    font-size: 45px;
    text-align: right;
}

.navPanel > button {
    margin-left: auto;
    color: var(--font-color);
}

.navPanel > button:first-child { margin-top: 0px; }

.navPanel > button:nth-child() {
    color: var(--selected-color);
}

.navPanel > button:hover { 
    padding-right: 10px;
    color: var(--hover-color) !important;
}

.mediaLinksBar {
    display: grid;
    grid-template-columns: repeat(3, var(--nav-row-size));
    gap: 5px;
    justify-content:flex-end;
}

.mediaLinksBar > button {
    border: 2px transparent solid;
    background-color: transparent;

    padding: 0;

    width: var(--nav-row-size);
    height: var(--nav-row-size);

    display: grid;
    justify-content: center;
    align-content: center;
    grid-template-columns: 40px;
    grid-template-rows: auto;
}

.mediaLinksBar > button > img {
    opacity: 0.8;
}

.mediaLinksBar > button:hover {
    border: 2px var(--hover-color) solid;
    border-radius: 15px;
}

/* 
#
# Content panel
#
*/

.contentPanel {
    color: var(--light-font-color);
    /* 
    I need to manually calculate this otherwise the absolute positioned child elements will not have 
    their width's bound and the contents of them will spill everywhere
    */
    width: calc(((var(--wrapper-max-width) - var(--site-grid-gap))/5)*3);
}

.contentPanel > div {
    transition: opacity .2s;
    position: absolute;
    width: inherit;
    opacity: 0;
}

/* Cap all loose images found in the content panel */
.contentPanel img {
    max-width: 200px;
    height: auto;
}

.projectShowcase {
    display: grid;
    grid-auto-rows: 64px;
    gap: 10px;
}

.projectButton {
    display: grid;
    grid-template-columns: 64px 1fr;
    gap: 20px;

    margin: 0 auto 0 0;
    padding: 0;
    transition: 0.15s;

    border: none;
    background-color: transparent;
}

/* Allergic to class names lol */

/* Vertically align the title and sub-title of the project button */
.projectButton > div:last-child {
    margin-top: auto;
    margin-bottom: auto;
}

/* Format the first p as the title */
.projectButton > div:last-child > p:first-child {
    color: var(--font-color);
    font-family: 'Poppins';
    text-align: left;
    font-size: 20px;
    transition: 0.15s;
}

/* Format the 2nd p as the sub-title */
.projectButton > div:last-child > p:nth-child(2) {
    color: var(--half-font-color);
    font-family: 'Roboto Condensed';
    text-align: left;
    font-size: 17px;
}

/* On hover have it jut out left and change the header color */
.projectButton:hover { padding-left: 10px; } 
.projectButton:hover > div:last-child > p:first-child { color: var(--hover-color); } 

/* Add rounding to the project's icon img */
.projectShowcase img {
    border-radius: 10px;
}

/* 
#
# General purpose 
#
*/

.vhAlign {
    display: grid;
    justify-content: center;
    align-content: center;
}

.isSelected {
    color: var(--selected-color) !important;
}

/* Cheap way of allowing the js classList.replace to happen. This does nothing and only exists to be replaced by the isSelected class when navButtons are pressed 
Probably a better solution than this but I don't care enough to figure it out */
.dummy {
    --nothing-to-see-here: 0;
}

/* Some text-lighting classes */
.lightSpan { color: var(--font-color); }
.glowSpan { color: var(--shiny-font-color); }